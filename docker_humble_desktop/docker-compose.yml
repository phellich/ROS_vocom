services:                                                   # different containers
  vocal_command:
    build:
      context: .                                            # current directory to build image
      dockerfile: Dockerfile                                # which dockerfile to use in context dir
    container_name: epflxplore_vocal_command                # custom name of container
    privileged: true                                        # access to host serivce (for micro)
    network_mode: host                                      # The container shares the host machine's network stack. This allows it to access services running on the host as if they were local.
    environment:
      - DISPLAY=$DISPLAY                                    # give display server info from host to container (GUI application=graphical user interface)
      - QT_X11_NO_MITSHM=1                                  # disable MIT-SHM extension ? (not good inside docker)
      - XAUTHORITY=/tmp/.docker.xauth                       # path to xauth file
      - PULSE_SERVER=unix:/mnt/wslg/PulseServer             # Ajout de la variable d'environnement pour PulseAudio
    volumes:                                                # partage et persiste des données entre host et container
      - /dev:/dev                                           # host devices to container
      # tout fichier ou répertoire stocké dans le volume base_humble_desktop_home_volume sera accessible à l'intérieur du conteneur à l'emplacement /home/xplore.
      # Contrairement aux fichiers créés directement dans le conteneur, les données dans ce volume persisteront même si le conteneur est arrêté ou supprimé
      # TO COMMENT FOR FINAL DEPLOYMENT
      - ./dev_ws/src:/home/xplore/dev_ws/src                # Synchronisation de src entre hôte et container --> IN IMAGE NOW, 
      - /mnt/wslg:/mnt/wslg:ro                              # Partage de données entre WSL et WSLg (partager le socket de PulseAudio avec le conteneur)
      - ./dev_ws/src/vocal_command_pkg/models_and_results/results:/home/xplore/dev_ws/src/vocal_command_pkg/models_and_results/results    
    devices:                                                # host sound device to container
      - /dev/snd 
    tty: true                                               # Allocates a terminal (pseudo-TTY)  to the container for interactive commands. (TTY = Teletype, refer to the text input/output env of a computer) 
    stdin_open: true                                        # allows to interact with terminal opened 
                                                            # same as -t or -i for docker run, or -it to combine them 